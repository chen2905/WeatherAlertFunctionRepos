# This workflow will build a .NET Core project and deploy it to an Azure Functions App on Windows when a commit is pushed to the main branch.
# Ensure you've set up your Azure Function App and configured the required secrets in GitHub

name: Deploy WeatherAlertFunction To AZ

on:
  push:
    branches: ["main"]

env:
  AZURE_FUNCTIONAPP_NAME: 'WeatherAlertFunction'   # Replace with your Azure Function App name
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'WeatherAlertFunction' # Path to your function app project
  DOTNET_VERSION: '8.0.x'                         # Target .NET version

jobs:
  build-and-deploy:
    runs-on: windows-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup .NET Environment
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore Dependencies
      run: |
        dotnet restore ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/WeatherAlertFunction.csproj

    - name: Build Project
      run: |
        dotnet build ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/WeatherAlertFunction.csproj --configuration Release

    - name: Publish Project
      run: |
        dotnet publish ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/WeatherAlertFunction.csproj --configuration Release --output ./output

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to Azure Functions
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: './output'